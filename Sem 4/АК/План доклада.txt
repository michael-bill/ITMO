- Что это?

Code Injection это - Уязвимость web-приложений, которая представляет собой прямое внедрение в интрепретатор вредоносного кода, заранее не подразумеваемого разработчиком, как правило с целью доступа к конфиденциальным данным приложения.

- Природа образования уязвимости

Дело в том, что так или иначе практически во всех web-приложениях присутствует та или иная технология, работающая через интерпретацию кода, будь то JavaScript в вашем браузере, PostgresSQL в качестве вашей базы данных или Python Django в качестве бэкенда для вашего микросервиса, от этого никуда не деться. Так вот, дело в том, что code injection это та уязвимость, которая может существовать исключительно в тех технологиях, что работают через интерпретацию кода и никак иначе.

- Почему так?

Чтобы подробнее разобраться, надо понимать, в чём принципиальное отличие работы программы, написанной на компилируемом языке программиронивая, от интерпретируемого: как раз на текущем слайде можно увидеть иллюстрирующую их диаграмму.

В случае с компилируемым языком программирования, чтобы выполнить нашу программу на процессоре, нужно сперва, скомпилировать её, то есть перевести в машинный код, это как раз делает компилятор, на вход он принимает определённые текстовые файлы, написанные по опредённым правилам, что устанавливает язык, а на выход единый исполняемый машинный код, упакованный в исполняемый файл, который в свою очередь и будет являться программой, которую начнёт выполнять процессор.

В случае с интрпретацией, дело обстоит весьма иначе, для запуска нашей программы нужно сначала запустить интерпретатор, а уже потом подать ему текстовый файл с кодом на языке программирования, который интерпретатор будет выполять в кавычках "построчно", в режиме реальоного времени, конвертируя код с языка программирования понимаемом человеку, в машинный код, понимаемый процессором.

- Корень проблемы

Исходя из рассмотренных отличий, следует отметить, что скомпилированная программа выполнит только тот код, который был в неё заложен после процесса компиляции. Когда в случае с интерпретатором, пока он запущен, даже если программа уже выполняется, мы можем продолжить внедрять код напрямую в интерпретатор, что называется Code Injection.

Отсюда и следует корень проблемы - интерпретатор позволяет совершать эти иньекции и пользователь, путём хитрых манипуляций, может найти способы, как внедрить собственный вредоносный код и сделать что-то плохое, что разработчиком не подразумевалось.

Дальше на интуиции
