-- Задание 1.
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД, Н_ВЕДОМОСТИ.ЧЛВК_ИД.
-- Фильтры (AND): 
-- a) Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ > Ведомость.
-- b) Н_ВЕДОМОСТИ.ИД > 1250981.
-- Вид соединения: RIGHT JOIN.

SELECT Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД, Н_ВЕДОМОСТИ.ЧЛВК_ИД
FROM Н_ТИПЫ_ВЕДОМОСТЕЙ
RIGHT JOIN Н_ВЕДОМОСТИ ON Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД = Н_ВЕДОМОСТИ.ТВ_ИД
WHERE Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ > 'Ведомость' AND Н_ВЕДОМОСТИ.ИД > 1250981;


-- Задание 2.
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.НАЧАЛО.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ФАМИЛИЯ < Ёлкин.
-- b) Н_ОБУЧЕНИЯ.ЧЛВК_ИД > 112514.
-- c) Н_УЧЕНИКИ.ИД > 100410.
-- Вид соединения: RIGHT JOIN.

SELECT Н_ЛЮДИ.ИМЯ, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.НАЧАЛО
FROM Н_ОБУЧЕНИЯ
RIGHT JOIN Н_ЛЮДИ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
RIGHT JOIN Н_УЧЕНИКИ ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE 	Н_ЛЮДИ.ФАМИЛИЯ < 'Ёлкин' AND
        Н_ОБУЧЕНИЯ.ЧЛВК_ИД > 112514 AND
        Н_УЧЕНИКИ.ИД > 100410;


-- Задание 3.
-- Вывести число студентов ФКТИУ, которые не имеет отчества.
-- Ответ должен содержать только одно число.

SELECT COUNT(*) FROM Н_ЛЮДИ
WHERE   (Н_ЛЮДИ.ОТЧЕСТВО SIMILAR TO '[\.\s]*' OR Н_ЛЮДИ.ОТЧЕСТВО IS NULL) AND
        (Н_ЛЮДИ.ИД = ANY (SELECT Н_УЧЕНИКИ.ЧЛВК_ИД
            FROM Н_УЧЕНИКИ
            JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
            JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
            WHERE
                Н_ОТДЕЛЫ.ОТД_ИД = ANY (SELECT Н_ОТДЕЛЫ.ИД FROM Н_ОТДЕЛЫ WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ='КТиУ') OR
                Н_ОТДЕЛЫ.ИД = (SELECT Н_ОТДЕЛЫ.ИД FROM Н_ОТДЕЛЫ WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ='КТиУ')
        ));


-- Задание 4.
-- Выдать различные имена людей и число людей с каждой из этих имен,
-- ограничив список именами, встречающимися ровно 10 раз на ФКТИУ.
-- Для реализации использовать соединение таблиц.

SELECT Н_ЛЮДИ.ИМЯ as Имя, COUNT(*) as count FROM Н_ЛЮДИ
WHERE (Н_ЛЮДИ.ИД = ANY (SELECT Н_УЧЕНИКИ.ЧЛВК_ИД
            FROM Н_УЧЕНИКИ
            JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
            JOIN Н_ОТДЕЛЫ ON Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
            WHERE
                Н_ОТДЕЛЫ.ОТД_ИД = ANY (SELECT Н_ОТДЕЛЫ.ИД FROM Н_ОТДЕЛЫ WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ='КТиУ') OR
                Н_ОТДЕЛЫ.ИД = (SELECT Н_ОТДЕЛЫ.ИД FROM Н_ОТДЕЛЫ WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ='КТиУ')
        ))
GROUP BY Н_ЛЮДИ.ИМЯ HAVING COUNT(*) >= 10;


-- Задание 5.
-- Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка),
-- у которых средняя оценка не больше минимальной оценк(е|и) в группе 1101.

WITH AVG_GRADES AS (
        SELECT
                Н_ЛЮДИ.ИД AS Номер,
                CONCAT(Н_ЛЮДИ.ИМЯ, ' ', Н_ЛЮДИ.ФАМИЛИЯ, ' ', Н_ЛЮДИ.ОТЧЕСТВО) AS ФИО,
                AVG(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER)) AS Ср_оценка
        FROM Н_ЛЮДИ
        JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
        JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
        WHERE
                Н_ВЕДОМОСТИ.ОЦЕНКА SIMILAR TO '\d+' AND
                Н_УЧЕНИКИ.ГРУППА = '4100'
        GROUP BY Н_ЛЮДИ.ИД, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО)
SELECT * FROM AVG_GRADES
WHERE AVG_GRADES.Ср_оценка <= (
        SELECT MIN(CAST(Н_ВЕДОМОСТИ.ОЦЕНКА AS INTEGER))
        FROM Н_ВЕДОМОСТИ
        JOIN Н_ЛЮДИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД=Н_ЛЮДИ.ИД
        JOIN Н_УЧЕНИКИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД=Н_УЧЕНИКИ.ЧЛВК_ИД
        WHERE   
                Н_ВЕДОМОСТИ.ОЦЕНКА SIMILAR TO '\d+' AND
                Н_УЧЕНИКИ.ГРУППА = '1101')
ORDER BY AVG_GRADES.Ср_оценка DESC;


-- Задание 6.
-- Получить список студентов, зачисленных ровно первого сентября 2012 года
-- на первый курс очной или заочной формы обучения (специальность: 230101). В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер и состояние пункта приказа;
-- Для реализации использовать подзапрос с IN.

SELECT
        Н_УЧЕНИКИ.ГРУППА as НОМЕР_ГРУППЫ,
        Н_ЛЮДИ.ИД as НОМЕР,
        CONCAT(Н_ЛЮДИ.ФАМИЛИЯ, ' ', Н_ЛЮДИ.ИМЯ, ' ', Н_ЛЮДИ.ОТЧЕСТВО) as ФИО,
        Н_УЧЕНИКИ.ПРИЗНАК as СОСТОЯНИЕ
FROM Н_ЛЮДИ
JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE
        Н_УЧЕНИКИ.ПЛАН_ИД IN (
            SELECT Н_ПЛАНЫ.ИД FROM Н_ПЛАНЫ
            JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
            WHERE Н_ПЛАНЫ.НАПС_ИД = (
                SELECT Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД FROM Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ
                WHERE Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = (
                        SELECT Н_НАПР_СПЕЦ.ИД FROM Н_НАПР_СПЕЦ
                        WHERE Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101'
                    )
                ) AND
                (Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная' OR
                Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Заочная') AND
                (DATE(Н_УЧЕНИКИ.НАЧАЛО)  = DATE('2012-09-01'))
            );



-- Задание 7.
-- Вывести список студентов, имеющих одинаковые фамилии, но не совпадающие даты рождения.

SELECT DISTINCT
        s1.ИМЯ,
        s1.ФАМИЛИЯ,
        s1.ОТЧЕСТВО,
        s1.ДАТА_РОЖДЕНИЯ
FROM Н_ЛЮДИ s1
JOIN Н_ЛЮДИ s2 ON
    s1.ФАМИЛИЯ = s2.ФАМИЛИЯ AND
    DATE(s1.ДАТА_РОЖДЕНИЯ) != DATE(s2.ДАТА_РОЖДЕНИЯ)
ORDER BY 2;